package model.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.TreeSet;

import com.sun.corba.se.spi.orbutil.fsm.Guard.Result;

import model.Song;
import model.User;

public class SongDao {

	private static SongDao instance;
	
	private SongDao(){}
	
	public static synchronized SongDao getInstance(){
		if(instance==null){
			instance=new SongDao();
		}
		
		return instance;
	}
	
	public void uploadSong(Song song) throws SQLException{
		Connection con=DBManager.getInstance().getConnection();
		PreparedStatement stmt=con.prepareStatement("INSERT INTO songs (song_name, upload_date, listenings, user_id, genre_id, song_url) "
				                                  + "VALUES (?, ?, ?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
		stmt.setString(1, song.getTitle());
		stmt.setDate(2, song.getUploadDate());
		stmt.setLong(3, song.getTimesListened());
		stmt.setLong(4, song.getUser().getUserID());
		stmt.setLong(5, song.getGenre());
		stmt.setString(6, song.getUrl());
		ResultSet rs=stmt.executeQuery();
		rs.next();
		song.setSongId(rs.getInt(1));
	}
	
	public boolean existSong(Song s) throws SQLException{
		Connection con=DBManager.getInstance().getConnection();
		PreparedStatement stmt=con.prepareStatement("SELECT count(*) FROM songs WHERE song_id=?");
		stmt.setLong(1, s.getSongId());
		ResultSet rs=stmt.executeQuery();
		rs.next();
		int count=rs.getInt(1);
		return count>0;
	}
	
	public TreeSet<Song> getSongsForUser(User u) throws SQLException{
		Connection con=DBManager.getInstance().getConnection();
		PreparedStatement stmt=con.prepareStatement("SELECT s.song_id, s.song_name, s.upload_date, s.listenings, g.genre_title, s.song_url"
				                                  + "FROM songs as s JOIN music_genres as g "
				                                  + "ON s.genre_id=g.genre_id"
				                                  + "WHERE user_id=?");
		stmt.setLong(1, user_id);
		ResultSet rs=stmt.executeQuery();
		TreeSet<Song> songs=new TreeSet<>();
		while(rs.next()){
			songs.add(new Song(rs.getLong(1), rs.getString(2), rs.getDate(3), rs.getLong(4), u, rs.getString(6), rs.getString(5), actions, comments))
		}
	}
}
